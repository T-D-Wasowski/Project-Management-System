@page "/projects"

@attribute [Authorize]
@inject HttpClient Http

<h3>All Project</h3>

<hr />

<div class="table-responsive">

    <table class="table table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Project Name</th>
                <th>Issuing Company</th>
                <th>View Details</th>
                <th>Edit Details</th>
                <th>Delete Project</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var project in Projects)
            {
                <tr>
                    <td>
                        @project.Name
                    </td>
                    <td>
                        @Companies.Find(company => company.Id == project.CompanyId).Name
                    </td>
                    <td>
                        <a href="/projects/read/@project.Id">View</a>
                    </td>
                    <td>
                        <a href="/projects/update/@project.Id">Edit</a>
                    </td>
                    <td>
                        <a href="/projects/delete/@project.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<p>
    <a class="btn btn-primary" href="/projects/create">Create Project</a>
</p>

@code {

    private List<Project> Projects { get; set; } = new List<Project>();
    private List<Company> Companies { get; set; } = new List<Company>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Projects = await Http.GetFromJsonAsync<List<Project>>("/api/Projects");
            Companies = await Http.GetFromJsonAsync<List<Company>>("/api/Companies");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
        catch (Exception)
        {
            throw;
        }
    }

}