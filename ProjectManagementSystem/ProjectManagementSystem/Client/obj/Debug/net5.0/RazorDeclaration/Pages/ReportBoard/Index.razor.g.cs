// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ProjectManagementSystem.Client.Pages.ReportBoard
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Sandra Gröniger\Desktop\Dawid 2022\Uni\EAD\Coursework\ProjectManagementSystem\ProjectManagementSystem\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Sandra Gröniger\Desktop\Dawid 2022\Uni\EAD\Coursework\ProjectManagementSystem\ProjectManagementSystem\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Sandra Gröniger\Desktop\Dawid 2022\Uni\EAD\Coursework\ProjectManagementSystem\ProjectManagementSystem\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Sandra Gröniger\Desktop\Dawid 2022\Uni\EAD\Coursework\ProjectManagementSystem\ProjectManagementSystem\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Sandra Gröniger\Desktop\Dawid 2022\Uni\EAD\Coursework\ProjectManagementSystem\ProjectManagementSystem\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Sandra Gröniger\Desktop\Dawid 2022\Uni\EAD\Coursework\ProjectManagementSystem\ProjectManagementSystem\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Sandra Gröniger\Desktop\Dawid 2022\Uni\EAD\Coursework\ProjectManagementSystem\ProjectManagementSystem\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Sandra Gröniger\Desktop\Dawid 2022\Uni\EAD\Coursework\ProjectManagementSystem\ProjectManagementSystem\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Sandra Gröniger\Desktop\Dawid 2022\Uni\EAD\Coursework\ProjectManagementSystem\ProjectManagementSystem\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Sandra Gröniger\Desktop\Dawid 2022\Uni\EAD\Coursework\ProjectManagementSystem\ProjectManagementSystem\Client\_Imports.razor"
using ProjectManagementSystem.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Sandra Gröniger\Desktop\Dawid 2022\Uni\EAD\Coursework\ProjectManagementSystem\ProjectManagementSystem\Client\_Imports.razor"
using ProjectManagementSystem.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Sandra Gröniger\Desktop\Dawid 2022\Uni\EAD\Coursework\ProjectManagementSystem\ProjectManagementSystem\Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Sandra Gröniger\Desktop\Dawid 2022\Uni\EAD\Coursework\ProjectManagementSystem\ProjectManagementSystem\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Authentication;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\Sandra Gröniger\Desktop\Dawid 2022\Uni\EAD\Coursework\ProjectManagementSystem\ProjectManagementSystem\Client\_Imports.razor"
using ProjectManagementSystem.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\Sandra Gröniger\Desktop\Dawid 2022\Uni\EAD\Coursework\ProjectManagementSystem\ProjectManagementSystem\Client\_Imports.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\Sandra Gröniger\Desktop\Dawid 2022\Uni\EAD\Coursework\ProjectManagementSystem\ProjectManagementSystem\Client\_Imports.razor"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Sandra Gröniger\Desktop\Dawid 2022\Uni\EAD\Coursework\ProjectManagementSystem\ProjectManagementSystem\Client\Pages\ReportBoard\Index.razor"
           [Authorize]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/reportboard")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 63 "C:\Users\Sandra Gröniger\Desktop\Dawid 2022\Uni\EAD\Coursework\ProjectManagementSystem\ProjectManagementSystem\Client\Pages\ReportBoard\Index.razor"
       

    private bool Generated { get; set; } = false;
    private string Message { get; set; } = "Please select a project for the report.";

    private double TotalCompanyProjects { get; set; }
    private double TotalCompanyAssignedUsers { get; set; }
    private double TotalCompanyAssignedTickets { get; set; }
    private double AverageCompanyAssignedUsers { get; set; }
    private double AverageCompanyAssignedTickets { get; set; }

    private double ProjectAssignedUsers { get; set; }
    private double AssignedUserProjectCompanyDifference { get; set; }
    private double AssignedUserProjectCompanyPercentage { get; set; }

    private double ProjectAssignedTickets { get; set; }
    private double AssignedTicketProjectCompanyDifference { get; set; }
    private double AssignedTicketProjectCompanyPercentage { get; set; }

    private double ProjectCompletedTickets { get; set; }
    private double ProjectCompletedTicketsPercentage { get; set; }

    private Company Company {get;set;} = new Company();
    private List<Company> Companies { get; set; } = new List<Company>();
    private List<Project> Projects { get; set; } = new List<Project>();
    private List<Ticket> Tickets { get; set; } = new List<Ticket>();
    private List<ProjectUser> ProjectUsers { get; set; } = new List<ProjectUser>();
    private List<User> Users { get; set; } = new List<User>();
    private List<User> AssignedUsers { get; set; } = new List<User>();
    private List<UserTicket> UserTickets { get; set; } = new List<UserTicket>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Companies = await Http.GetFromJsonAsync<List<Company>>("/api/Companies");
            Projects = await Http.GetFromJsonAsync<List<Project>>("/api/Projects");
            Tickets = await Http.GetFromJsonAsync<List<Ticket>>("/api/Tickets");
            ProjectUsers = await Http.GetFromJsonAsync<List<ProjectUser>>("/api/ProjectUsers");
            UserTickets = await Http.GetFromJsonAsync<List<UserTicket>>("/api/UserTickets");
            Users = await Http.GetFromJsonAsync<List<User>>("/api/Users");

        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
        catch (Exception)
        {
            throw;
        }
    }

    private void GeneratePrediction(ChangeEventArgs e)
    {
        Generated = true;

        Project project = Projects.Find(project => project.Id.ToString() == e.Value.ToString());
        Company = Companies.Find(company => company.Id == project.CompanyId);

        //Retrieve company projects
        Company.Projects = new List<Project>();
        foreach (var p in Projects)
        {
            if (p.CompanyId == Company.Id)
            {
                Company.Projects.Add(p);
            }
        }

        //Retrieve each company projects projectUsers
        foreach (var companyProject in Company.Projects)
        {
            companyProject.ProjectUsers = new List<ProjectUser>();
            foreach (var projectUser in ProjectUsers)
            {
                if (projectUser.ProjectId == companyProject.Id)
                {
                    companyProject.ProjectUsers.Add(projectUser);
                }
            }

            companyProject.Tickets = new List<Ticket>();
            foreach(var ticket in Tickets)
            {
                if (ticket.ProjectId == companyProject.Id)
                {
                    companyProject.Tickets.Add(ticket);
                }
            }
        }

        //Retrieve project projectUsers
        project.ProjectUsers = new List<ProjectUser>();
        foreach (var projectUser in ProjectUsers)
        {
            if (projectUser.ProjectId == project.Id)
            {
                project.ProjectUsers.Add(projectUser);
            }
        }

        AssignedUsers = new List<User>();
        //Retrieve assigned users
        foreach (var projectUser in project.ProjectUsers)
        {
            AssignedUsers.Add(Users.Find(user => user.Id == projectUser.UserId));
        }

        foreach (var user in AssignedUsers)
        {
            user.UserTickets = new List<UserTicket>();
            user.ProjectUsers = new List<ProjectUser>();

            foreach (var userTicket in UserTickets)
            {
                if (userTicket.UserId == user.Id)
                {
                    user.UserTickets.Add(userTicket);
                }
            }

            foreach (var projectUser in ProjectUsers)
            {
                if (projectUser.UserId == user.Id)
                {
                    user.ProjectUsers.Add(projectUser);
                }
            }
        }

        //Retrieve assigned tickets
        project.Tickets = new List<Ticket>();
        foreach (var ticket in Tickets)
        {
            if (ticket.ProjectId == project.Id)
            {
                project.Tickets.Add(ticket);
            }
        }

        TotalCompanyProjects = Company.Projects.Count;

        TotalCompanyAssignedUsers = 0;
        TotalCompanyAssignedTickets = 0;
        foreach (var companyProject in Company.Projects)
        {
            TotalCompanyAssignedUsers += companyProject.ProjectUsers.Count;
            TotalCompanyAssignedTickets += companyProject.Tickets.Count;
        }

        AverageCompanyAssignedUsers = (TotalCompanyAssignedUsers / TotalCompanyProjects);
        AverageCompanyAssignedTickets = (TotalCompanyAssignedTickets / TotalCompanyProjects);

        ProjectAssignedUsers = project.ProjectUsers.Count;
        AssignedUserProjectCompanyDifference = (ProjectAssignedUsers - AverageCompanyAssignedUsers);
        AssignedUserProjectCompanyPercentage = (ProjectAssignedUsers / TotalCompanyAssignedUsers);

        ProjectAssignedTickets = project.Tickets.Count;
        AssignedTicketProjectCompanyDifference = (ProjectAssignedTickets - AverageCompanyAssignedTickets);
        AssignedTicketProjectCompanyPercentage = (ProjectAssignedTickets / TotalCompanyAssignedTickets);

        List<Ticket> completedTickets = new List<Ticket>();
        foreach (var ticket in project.Tickets)
        {
            if(ticket.EndDate != null)
            {
                completedTickets.Add(ticket);
            }

        }

        ProjectCompletedTickets = completedTickets.Count;
        ProjectCompletedTicketsPercentage = ((ProjectCompletedTickets / ProjectAssignedTickets) * 100);

        //----------------------------------------------------------------------------------------------------

    }




#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider AuthenticationStateProvider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
